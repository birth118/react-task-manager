[{"/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/index.js":"1","/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/components/App.js":"2","/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/components/PrimaryLayout.js":"3","/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/context/AuthContext.js":"4","/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/components/Landing.js":"5","/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/components/Nav.js":"6","/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/components/tasks/task-list.js":"7","/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/components/users/Register.js":"8","/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/components/users/Login.js":"9","/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/components/users/Profile.js":"10","/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/context/events.js":"11","/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/context/index.js":"12","/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/components/tasks/task-add.js":"13","/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/components/tasks/task-item.js":"14","/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/utils/index.js":"15","/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/utils/client.js":"16","/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/utils/loadUser.js":"17","/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/utils/localStorage.js":"18","/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/utils/auth.js":"19"},{"size":154,"mtime":1611366848621,"results":"20","hashOfConfig":"21"},{"size":350,"mtime":1611809034352,"results":"22","hashOfConfig":"21"},{"size":1693,"mtime":1611906548736,"results":"23","hashOfConfig":"21"},{"size":877,"mtime":1611878120963,"results":"24","hashOfConfig":"21"},{"size":673,"mtime":1611364357886,"results":"25","hashOfConfig":"21"},{"size":1883,"mtime":1611977682969,"results":"26","hashOfConfig":"21"},{"size":3137,"mtime":1611910609551,"results":"27","hashOfConfig":"21"},{"size":3683,"mtime":1611835800965,"results":"28","hashOfConfig":"21"},{"size":2191,"mtime":1611906452697,"results":"29","hashOfConfig":"21"},{"size":3569,"mtime":1611977544423,"results":"30","hashOfConfig":"21"},{"size":63,"mtime":1611810056984,"results":"31","hashOfConfig":"21"},{"size":55,"mtime":1611810032454,"results":"32","hashOfConfig":"21"},{"size":913,"mtime":1611905592756,"results":"33","hashOfConfig":"21"},{"size":1247,"mtime":1611909755620,"results":"34","hashOfConfig":"21"},{"size":125,"mtime":1611811768727,"results":"35","hashOfConfig":"21"},{"size":493,"mtime":1611545307124,"results":"36","hashOfConfig":"21"},{"size":488,"mtime":1611731463008,"results":"37","hashOfConfig":"21"},{"size":899,"mtime":1611830169306,"results":"38","hashOfConfig":"21"},{"size":1920,"mtime":1611898802623,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"c279k0",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/index.js",[],["83","84"],"/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/components/App.js",[],"/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/components/PrimaryLayout.js",[],"/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/context/AuthContext.js",[],"/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/components/Landing.js",[],"/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/components/Nav.js",["85"],"import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport { LOG_IN, LOG_OUT, useAuth } from '../context'\nimport { auth } from \"../utils\";\n\n\n\nconst Nav = ({ children }) => {\n  const { isAuthenticated, user, dispatch\n  } = useAuth()\n\n  React.useEffect(() => {\n    let isCurrent = true\n    console.log(isAuthenticated);\n    if (!isAuthenticated) {\n      const user = auth.getAuthenticatedUser()\n      console.log(user);\n      if (user && isCurrent) {\n        dispatch({ type: LOG_IN, payload: user })\n      }\n\n    }\n\n    return () => {\n      isCurrent = false\n    }\n  }, [isAuthenticated, dispatch])\n\n\n  //console.log(isAuthenticated);\n\n\n  const onLogoutClick = (params) => {\n\n    auth.logout().then(() => {\n      //  dispatch({ type: LOG_OUT, payload: null })\n    }).catch()\n    dispatch({ type: LOG_OUT, payload: null })\n\n  }\n\n  //const userToken = localStorage.getItem('task-manager-current-user')\n  return (\n    <div>\n      <nav className=\"navbar bg-dark\">\n\n        {!isAuthenticated ?\n          <Fragment>\n            <h1>\n              <Link to=\"/\"><i class=\"fas fa-tasks\"></i> Task Manager</Link>\n            </h1>\n            <ul>\n              <li><Link to=\"/users/register\">Register</Link></li>\n              <li><Link to=\"/users/login\">Login</Link></li>\n            </ul>\n\n          </Fragment>\n\n          :\n\n          <Fragment>\n            <h1>\n              <Link to=\"/tasks\"><i class=\"fas fa-tasks\"></i> Task Manager</Link>\n            </h1>\n            <ul>\n              <li><Link to=\"/tasks\">Tasks</Link></li>\n              <li><Link to=\"/users/me\"><i className=\"fas fa-user-circle\"></i></Link></li>\n              <li>\n                <a onClick={onLogoutClick} href='#!'>\n                  Logout\n              </a>\n              </li>\n            </ul>\n          </Fragment>\n        }\n\n\n      </nav>\n    </div>\n  )\n}\n\nexport default Nav\n","/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/components/tasks/task-list.js",["86"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { useAuth } from \"../../context\";\nimport { auth, client } from \"../../utils\";\nimport { TaskItem } from \"./task-item\";\nimport { TaskAdd } from \"./task-add\";\n\n\nexport const Tasklists = ({ history }) => {\n\n  const { isAuthenticated, user } = useAuth()\n  const [tasks, setTasks] = React.useState([])\n  const [error, setError] = React.useState(null)\n\n\n\n\n  // if (!isAuthenticated) {\n  //   history.push('/')\n  // }\n\n  React.useEffect(() => {\n    let isCurrent = true\n    if (isAuthenticated && isCurrent) {\n      client.get('/tasks', { headers: { 'Authorization': `Bearer ${user.token}` } })\n        .then(({ data }) => { setTasks(data) })\n        .catch(({ response }) => {\n          console.log(response);\n          setError(response.data.errors[0].message)\n        })\n    }\n\n    return () => {\n      isCurrent = false\n    }\n  }, [isAuthenticated])\n\n  const onItemChange = (taskId, completed) => {\n    // console.log(taskId);\n    // console.log(completed);\n    // console.log(auth.authHeader())\n    client.patch(`/tasks/${taskId}`, { completed }, { headers: auth.authHeader() })\n      .then(({ data }) => { })\n      .catch(() => {\n\n      })\n\n  }\n  const onItemDelete = (taskId) => {\n    // console.log(taskId);\n\n    // console.log(auth.authHeader())\n    client.delete(`/tasks/${taskId}`, { headers: auth.authHeader() })\n      .then(({ data }) => {\n        setTasks(\n          tasks.filter((item) => { return item._id !== data._id })\n        )\n      })\n      .catch(() => {\n\n      })\n\n  }\n\n  const onFormSubmit = (description) => {\n    setTasks(...tasks, description)\n    client.post('/tasks', { description }, { headers: auth.authHeader() })\n      .then(({ data }) => { setTasks([...tasks, data]) }).catch(({ response }) => { setError(response.errors[0].message) })\n  }\n\n  return (\n    < section class=\"container\" >\n      { !isAuthenticated ? <div>\n        <h4>Not Logged In </h4>\n        <p className=\"my-1\">\n          Already have an account? <Link to=\"/users/login\">Sign In</Link>\n        </p>\n      </div> :\n        <div>\n          <TaskAdd onFormSubmit={onFormSubmit} />\n          <br />\n\n          {!error && tasks.length === 0 ? <div> Loading... </div> :\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>Task</th>\n                  <th>Created</th>\n                  <th>Completed?</th>\n                </tr>\n              </thead>\n              <tbody>\n                {tasks.length > 0 && tasks.map((task, index) =>\n                  <TaskItem\n                    key={index} task={task}\n                    onItemChange={onItemChange}\n                    onItemDelete={onItemDelete} />\n                )}\n                {error}\n\n              </tbody>\n            </table>\n          }\n        </div>}\n\n\n    </section>\n  )\n}\n\n/*\n\n[\n  {\n      \"completed\": false,\n      \"_id\": \"600b61e95c33310013120653\",\n      \"description\": \"test1 post #1\",\n      \"owner\": \"600a72e06728107e38a6a541\",\n      \"createdAt\": \"2021-01-22T23:38:17.082Z\",\n      \"updatedAt\": \"2021-01-22T23:38:17.082Z\",\n      \"__v\": 0\n  }\n]\n\n*/","/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/components/users/Register.js",[],"/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/components/users/Login.js",[],"/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/components/users/Profile.js",["87"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useAuth } from '../../context/'\n\nimport { client } from \"../../utils\";\n\n\n\n// Should be capable to fetch data for Component isolation\n\nconst Profile = ({ history, children }) => {\n\n\n  const { isAuthenticated, user, } = useAuth()\n\n  // const [loginUser, setLoginUser] = React.useState(null)\n\n  //console.log(user);\n  // const loginUser = user.user\n\n  const [avatar, setAvatar] = React.useState(null)\n  const [error, setError] = React.useState(null)\n\n\n  const avatarRef = React.useRef()\n  const uploaderRef = React.useRef()\n\n  const loadAvatar = () => {\n    // console.log(loginUser);\n    client.get(`/users/${user.user._id}/avatar`).then(({ data }) => {\n      avatarRef.current.src = `http://localhost:5000/users/${user.user._id}/avatar`\n    }).catch((response) => {\n      console.log(response);\n      //  setError(response.data.errors[0].message)\n      avatarRef.current.src = '/images/user-1633249_1280.png'\n    })\n  }\n\n\n  //React.useCallback(loadAvatar, [loginUser])\n\n  React.useEffect(() => {\n    // let isCurrent = true\n    //  console.log(isAuthenticated);\n    if (isAuthenticated) {\n      loadAvatar()\n    }\n\n  }, [isAuthenticated])\n\n  const handleUpload = (e) => {\n    const file = e.target.files[0];\n    setError(null)\n    setAvatar(file)\n\n    if (file) {\n      const reader = new FileReader();\n      //   console.log(file);\n      avatarRef.current.file = file;\n      reader.onload = (e) => {\n        avatarRef.current.src = e.target.result;\n      }\n      reader.readAsDataURL(file);\n    }\n\n  }\n\n  const doUpload = () => {\n\n    const data = new FormData()\n    data.append('avatar', avatar)\n\n    client.post(\"/users/me/avatar\", data, {\n      headers: {\n        'Authorization': `Bearer ${user.token}`\n      }\n    }).then((data) => { console.log(data); })\n      .catch(({ response }) => {\n        console.log(response);\n        setError(response.data.errors[0].message)\n      })\n\n  }\n\n  return (\n\n\n    <section className=\"container\">\n      { !isAuthenticated ? <div>\n        <h4>Not Logged In </h4>\n        <p className=\"my-1\">\n          Already have an account? <Link to=\"/users/login\">Sign In</Link>\n        </p>\n      </div> :\n\n        <div className=\"profile-grid my-1\">\n\n          <div className=\"profile-top bg-primary p-2\">\n            <div\n              onClick={() => uploaderRef.current.click()}\n            >\n\n              <img\n                ref={avatarRef}\n                className=\"round-img my-1\"\n                src='/images/spinner.gif'\n                alt=\"\"\n                style={{ cursor: 'pointer' }}\n              />\n\n            </div>\n\n            <input ref={uploaderRef} type=\"file\" accept=\"image/*\" multiple={false}\n              onChange={handleUpload}\n              style={{ display: 'none' }}\n            />\n\n            <input type=\"button\" class=\"btn btn-primary\"\n              //value=\"Upload\"\n              value='Upload'\n              onClick={doUpload} />\n\n          </div>\n\n          {error}\n          <div class=\"profile-about bg-dark p-2\">\n            <h1 className=\"large\">{user.user.name}</h1>\n            <h3 className=\"small\">{user.user.email}</h3>\n            {/*     <h2 class=\"text-primary\">John's Bio</h2>\n            <p>\n              Lorem ipsum dolor sit amet consectetur, adipisicing elit. Sed\n              doloremque nesciunt, repellendus nostrum deleniti recusandae nobis\n              neque modi perspiciatis similique?\n          </p>*/}\n\n          </div>\n\n\n        </div>\n\n\n\n      }\n    </section >\n  )\n}\n\nexport default Profile\n","/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/context/events.js",[],"/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/context/index.js",[],"/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/components/tasks/task-add.js",[],"/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/components/tasks/task-item.js",["88"],"import React from 'react'\n\nexport function TaskItem({ task, onItemChange, onItemDelete }) {\n  // const [completed, setCompleted] = React.useState(task.completed)\n  const createdDate = new Date(task.createdAt).toLocaleDateString('en-US')\n\n  const checkBoxRef = React.useRef()\n\n  React.useEffect(() => {\n    checkBoxRef.current.checked = task.completed\n\n  }, [])\n\n  const onInputChange = (e) => {\n    e.stopPropagation()\n    const checked = e.target.checked\n    //   console.log(checked)\n    // setCompleted(e.target.checked)\n    //  console.log(completed);\n    onItemChange(task._id, checked)\n  }\n\n  const onDelete = (e) => {\n    e.stopPropagation()\n    onItemDelete(task._id)\n\n  }\n\n  return (\n\n    <tr\n      onClick={() => {\n        //console.log(checkBoxRef)\n        checkBoxRef.current.click()\n      }}\n    >\n      <td>{task.description}</td>\n\n      <td> {createdDate}</td>\n      <td style={{ textAlign: 'center' }}>\n        <input ref={checkBoxRef}\n          type='checkbox'\n          onClick={onInputChange}\n        // value={completed}\n        // checked={completed}\n\n        />\n        <button\n          onClick={onDelete}\n          className=\"btn small btn-light\"\n          value=\"✗\"\n        >✗ </button>\n      </td>\n    </tr>\n\n  )\n}\n\n\n","/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/utils/index.js",[],"/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/utils/client.js",[],"/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/utils/loadUser.js",[],"/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/utils/localStorage.js",[],"/Users/seongsooyim/Documents/Waitara.Lab/NodeJS.MyCodes/react-task-manager/client/src/utils/auth.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":9,"column":28,"nodeType":"95","messageId":"96","endLine":9,"endColumn":32},{"ruleId":"97","severity":1,"message":"98","line":37,"column":6,"nodeType":"99","endLine":37,"endColumn":23,"suggestions":"100"},{"ruleId":"97","severity":1,"message":"101","line":49,"column":6,"nodeType":"99","endLine":49,"endColumn":23,"suggestions":"102"},{"ruleId":"97","severity":1,"message":"103","line":12,"column":6,"nodeType":"99","endLine":12,"endColumn":8,"suggestions":"104"},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'user.token'. Either include it or remove the dependency array.","ArrayExpression",["107"],"React Hook React.useEffect has a missing dependency: 'loadAvatar'. Either include it or remove the dependency array.",["108"],"React Hook React.useEffect has a missing dependency: 'task.completed'. Either include it or remove the dependency array.",["109"],"no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},"Update the dependencies array to be: [isAuthenticated, user.token]",{"range":"116","text":"117"},"Update the dependencies array to be: [isAuthenticated, loadAvatar]",{"range":"118","text":"119"},"Update the dependencies array to be: [task.completed]",{"range":"120","text":"121"},[901,918],"[isAuthenticated, user.token]",[1194,1211],"[isAuthenticated, loadAvatar]",[357,359],"[task.completed]"]